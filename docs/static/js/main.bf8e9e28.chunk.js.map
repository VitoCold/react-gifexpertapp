{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","end_point","category","api_key","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,OAC3CN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,EAAWC,EAAUC,GAA5B,uBAAAC,EAAA,6DAEbC,EAFa,kBAEIJ,EAFJ,cAEmBK,UAAUJ,GAF7B,6BAE2DC,GAF3D,SAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,0DCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACrC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCDHO,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAEzB,IAFsC,EAKZf,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAPyB,mBAK/BC,EAL+B,KAKxBC,EALwB,KAwBtC,OAdAC,qBAAU,WAEN1B,EATc,+BASKE,EAVP,oCAWPyB,MAAK,SAAAd,GAEFY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAKtB,CAACrB,IAEGsB,EDlB2BI,CAAa1B,GAAjCc,EAJuB,EAI7BN,KAAca,EAJe,EAIfA,QAGtB,OACI,qCACI,oBAAIJ,UAAU,mCAAd,SAAkDjB,IACjDqB,GAAW,mBAAGJ,UAAU,oCAAb,yBACZ,qBAAKA,UAAU,YAAf,SACKH,EAAOJ,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEd7Be,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,cAFhB,mBAEvBQ,EAFuB,KAEXT,EAFW,KAI9B,OACI,qCACI,8CACA,uBAEA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,6BAEQS,EAAWiB,KAAI,SAAAV,GAAQ,OACnB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCbtC4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bf8e9e28.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(categories => [inputValue,...categories ]);\r\n            setInputValue('');\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} >\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\n","export const getGifs = async (end_point, category, api_key) => {\r\n    // console.log(end_point, category, api_key);\r\n    const url = `https://${end_point}?q=${encodeURI(category)}&limit=10&api_key=${api_key}`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    // console.log(data);\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    // console.log(gifs);\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    // const [images, setImages] = useState([]);\r\n    // const api_key = 'PJ3DOeHePNWRJUsZJX9eV8Hu8VDpaWc9';\r\n    // const end_point = 'api.giphy.com/v1/gifs/search';\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__flash\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__fadeIn\">Cargando...</p>}\r\n            <div className=\"card-grid\">\r\n                {images.map(img => (\r\n                    <GifGridItem key={img.id} {...img} />\r\n                ))}\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const api_key = 'PJ3DOeHePNWRJUsZJX9eV8Hu8VDpaWc9';\r\n    const end_point = 'api.giphy.com/v1/gifs/search';\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(end_point, category, api_key)\r\n            .then(img => {\r\n                // setTimeout(() => {\r\n                setState({\r\n                    data: img,\r\n                    loading: false\r\n                })\r\n                // }, 3000);\r\n            })\r\n\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr />\r\n\r\n            <AddCategory setCategories={setCategories} />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid key={category} category={category} />\r\n\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}